@charset "utf-8";


// Default 
@function unitCheck($x) {
    // 단위체크
    @if(type-of($x)==number) {
        @if(unitless($x)) {
            @return $x+px;
        }
    }

    @return $x;
}

@mixin media($width) {
    $width: unitCheck($width);

    @media all and (max-width:$width) {
        @content;
    }
}

 

@mixin fontSize($size, $row:null) {
    $size: $size * 0.9; // 90
    font-size: $size + px;

    // line-height 설정
    @if ($row !=null) {
        line-height: $row;
    } 
 

    @include media(970) {
        $size: $size * 0.9; // 81
        font-size: $size + px;
    }

    @include media(600) {
        $size: $size * 0.15; //12.15
        font-size: $size + vw; // 12.15vw  (식 : 600일때 * 0.1215 = 72.9px )
        /* 

        360 * 0.1215 = 43.74px;
        */
    }


    // @include media(480) {
    //     $size: $size * 1.3;
    //     font-size: $size + vw;
    // }

    // @include media(360) {
    //     $size: $size * 1.05;
    //     font-size: $size + vw;
    // } 
   
}


// 말줄임 

@mixin abbr($w:100%) {
    text-overflow: ellipsis;
    white-space: nowrap;
    overflow: hidden;
    width: $w;
}

 

@mixin flex($a:stretch, $j:flex-start, $wrap:nowrap) {
    display: flex;
    align-items: $a;
    justify-content: $j;
    flex-wrap: $wrap;
    -ms-display: flex;
    -ms-align-items: $a;
    -ms-justify-content: $j;
    -ms-flex-wrap: $wrap;

    @content;
}

@mixin flexCenter {
    display: flex;
    align-items: center;
    justify-content: center;
    @content;

}

@mixin radius($r) {
    border-radius: $r;
    -ms-border-radius: $r;

}


 

@mixin circle($size,$ov:null) { 
    // $size : 300
    $size : unitCheck($size); //300px 
    // $size : 300px 
    width: $size;
    height: $size;
    border-radius: 50%;
    -ms-border-radius: 50%;
    display: block;   
    
    @if ($ov != null) {
        overflow:$ov;
    }    
   
}

@mixin navIcon($n, $x, $y, $x2, $y2) {
    &:nth-child(#{$n}) a {
        &.active .navIcon {
            background-position: $x2 $y2;
        }

        .navIcon {
            background-position: $x $y;
        }
    }
}
@mixin snsIcon($n, $x, $y) {//이미지 넘버링 삽입
    &:nth-child(#{$n}) a {
        background-position:$x $y;
    }
}
@mixin snsIcon2($n, $x, $y, $a, $d) { // 내가 만든 mixin
    &:nth-child(#{$n}) a {
        display:block;
        width:$x;
        height:$y;
        background:url($url + $a) no-repeat;//!.no-repeat 중요함 안빼먹기
        background-size:$d;
    }
}
@mixin panelIcon($n, $w, $h, $a, $x, $y, $d) { // 내가 만든 mixin
    &:nth-child(#{$n}) .cardList .cardIcon:before {
        content:'';
        display:block;
        width:$w;
        height:$h;
        background:url($url + $a) no-repeat $x $y/$d;//!.no-repeat 중요함 안빼먹기
        
    }
        
}
@mixin slide03Icon($n, $w, $h, $a, $x, $y, $d) {
    &:nth-child(#{$n}) a .midBox i {
        display:block;
        height:$h;
        width:$w;
        margin:0 auto;
        background:url($url + $a) no-repeat $x $y;
        background-size:$d;
    }
}

@mixin baseWidth($w:1160px, $mg:auto) {
    max-width: $w;
    width: 100%;
    box-sizing: border-box;
    margin-left: $mg;
    margin-right: $mg;
}

@mixin circle2($s, $c) { // 
    width:$s;
    height:$s;
    border-radius:50%; // radius 변수를 넣었을때 래디우스는 50으로 따로 지정
    display:block; // 블럭이랑 컬러도 같이 넣으면 따로 css 에서 넣을 필요없음
    background-color:$c; 

}
@mixin circle3($s:30px, $c:black, $t:#fff) { // 
    width:$s;
    height:$s;
    border-radius:50%; //radius 변수를 넣었을때 래디우스는 50으로 따로 지정
    display:block; //block이랑 컬러도 같이 넣으면 따로 css 에서 넣을 필요없음
    background-color:$c;
    color:$t; 
    @content; //@content자식요소안의 속성 추가 - css 에서 {}아래에 열어서 속성 넣을수 있음

}

@mixin clearfix {
    &:after {
        content:'';
        display:block;
        clear:both;
    }
}

